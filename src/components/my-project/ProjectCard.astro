---
// ProjectCard.astro
interface Props {
    title: string
    description: string
    img: string
    stack?: string[]
    url?: string
}

const { title, description, stack = [], img, url } = Astro.props

const getStackImage = (tech: string) => {
    const images: { [key: string]: string } = {
        js: '/public/assets/js.svg',
        tailwind: '/public/assets/tailwindcss.svg',
        astro: '/public/assets/astro.svg',
        react: '/public/assets/react.svg',
        next: '/public/assets/next.svg',
        mui: '/public/assets/mui.svg',
    }

    return images[tech.toLowerCase()] || null
}
---

<article
    class="border-yellow border p-3 shadow-2xl text-white rounded-md hover:scale-105 hover:shadow-4xl transition-all w-full min-h-[100px] md:text-xl md:h-[450px] justify-between flex flex-col"
>
    <p class="text-center font-semibold pb-3">{title}</p>
    <div
        class="flex justify-center min-h-[20vh] my-auto flex-col items-center md:h-[150px]"
    >
        <a href={url}>
            <img
                src={`/public/assets/projects/${img}.webp`}
                alt={`${img} Logo`}
                class="w-[200px] pb-3 md:w-[300px]"
            />
        </a>
    </div>
    <p class="font-light text-[12px] pb-4 md:text-lg">
        {description}
    </p>
    <div>
        <p class="font-bold text-[12px] pb-1 md:text-[14px]">Created with</p>
        <div class="flex flex-row gap-4">
            {
                stack.map((tech) => (
                    <img
                        src={getStackImage(tech)}
                        alt={`${tech} Logo`}
                        class="w-[20px] h-[20px] md:w-[30px] md:h-[30px] lg:w-[40px] lg:h-[40px]"
                    />
                ))
            }
        </div>
    </div>
</article>
